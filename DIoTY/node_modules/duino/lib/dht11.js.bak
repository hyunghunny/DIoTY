/**
 * DHT11 temperature and humidity sensor module
 * 
 * author    webofthink (hyunghunny@gmail.com)
*/

var events = require('events'),
    util = require('util');

/*
 * The main DHT11 constructor
 * Connect to the serial port and bind
 */
var DHT11 = function (options) {
    if (!options || !options.board || !options.pin) throw new Error('Must supply required options to DHT11 Sensor');
    this.board = options.board;
    this.pin = options.pin;

    // Loop and trigger fire-read sequences
    setInterval(function () {
        var msg = '96' + this.pin;
        this.board.write(msg);
    }.bind(this), options.throttle ||  500);

    // When data is received, parse inbound message
    // match pin to instance pin value
    this.board.on('data', function (message) {
        //console.log("receiving data from data event: " + message);
        var m = message.slice(0, -1).split('::'),
            err = null,
            pin, data;

        if (!m.length) {
            return;
        }

        pin = m[0]
        data = m.length === 2 ? m[1] : null;

        if (pin == this.pin && data != null) {
            // console.log("emitting data to read event: " + data);

            var values = data.slice(0).split(',');

            this.temperature = parseInt(values[0]);
            this.humidity = parseInt(values[1]);

            this.emit('read', err, this.temperature, this.humidity);

        }
    }.bind(this));
 };

/*
 * EventEmitter, I choose you!
 */
util.inherits(DHT11, events.EventEmitter);

module.exports = DHT11;